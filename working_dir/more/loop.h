/* Automatically generated by wasm2c */
#ifndef LOOP_H_GENERATED_
#define LOOP_H_GENERATED_

#include "wasm-rt.h"

#include <stdint.h>

#ifndef WASM_RT_CORE_TYPES_DEFINED
#define WASM_RT_CORE_TYPES_DEFINED
typedef uint8_t u8;
typedef int8_t s8;
typedef uint16_t u16;
typedef int16_t s16;
typedef uint32_t u32;
typedef int32_t s32;
typedef uint64_t u64;
typedef int64_t s64;
typedef float f32;
typedef double f64;
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef struct w2c_loop {
  u32 w2c_g0;
  wasm_rt_memory_t w2c_M0;
  wasm_rt_funcref_table_t w2c_T0;
} w2c_loop;

void wasm2c_loop_instantiate(w2c_loop*);
void wasm2c_loop_free(w2c_loop*);
wasm_rt_func_type_t wasm2c_loop_get_func_type(uint32_t param_count, uint32_t result_count, ...);

#ifndef wasm_multi_idi
#define wasm_multi_idi wasm_multi_idi
struct wasm_multi_idi {
  u32 i0;
  f64 d1;
  u32 i2;
};
#endif  /* wasm_multi_idi */

#ifndef wasm_multi_iji
#define wasm_multi_iji wasm_multi_iji
struct wasm_multi_iji {
  u32 i0;
  u64 j1;
  u32 i2;
};
#endif  /* wasm_multi_iji */

#ifndef wasm_multi_ii
#define wasm_multi_ii wasm_multi_ii
struct wasm_multi_ii {
  u32 i0;
  u32 i1;
};
#endif  /* wasm_multi_ii */

#ifndef wasm_multi_ff
#define wasm_multi_ff wasm_multi_ff
struct wasm_multi_ff {
  f32 f0;
  f32 f1;
};
#endif  /* wasm_multi_ff */

#ifndef wasm_multi_iij
#define wasm_multi_iij wasm_multi_iij
struct wasm_multi_iij {
  u32 i0;
  u32 i1;
  u64 j2;
};
#endif  /* wasm_multi_iij */

/* export: 'empty' */
void w2c_loop_empty(w2c_loop*);

/* export: 'singular' */
u32 w2c_loop_singular(w2c_loop*);

/* export: 'multi' */
u32 w2c_loop_multi(w2c_loop*);

/* export: 'nested' */
u32 w2c_loop_nested(w2c_loop*);

/* export: 'deep' */
u32 w2c_loop_deep(w2c_loop*);

/* export: 'as-select-first' */
u32 w2c_loop_as0x2Dselect0x2Dfirst(w2c_loop*);

/* export: 'as-select-mid' */
u32 w2c_loop_as0x2Dselect0x2Dmid(w2c_loop*);

/* export: 'as-select-last' */
u32 w2c_loop_as0x2Dselect0x2Dlast(w2c_loop*);

/* export: 'as-if-condition' */
void w2c_loop_as0x2Dif0x2Dcondition(w2c_loop*);

/* export: 'as-if-then' */
u32 w2c_loop_as0x2Dif0x2Dthen(w2c_loop*);

/* export: 'as-if-else' */
u32 w2c_loop_as0x2Dif0x2Delse(w2c_loop*);

/* export: 'as-br_if-first' */
u32 w2c_loop_as0x2Dbr_if0x2Dfirst(w2c_loop*);

/* export: 'as-br_if-last' */
u32 w2c_loop_as0x2Dbr_if0x2Dlast(w2c_loop*);

/* export: 'as-br_table-first' */
u32 w2c_loop_as0x2Dbr_table0x2Dfirst(w2c_loop*);

/* export: 'as-br_table-last' */
u32 w2c_loop_as0x2Dbr_table0x2Dlast(w2c_loop*);

/* export: 'as-call_indirect-first' */
u32 w2c_loop_as0x2Dcall_indirect0x2Dfirst(w2c_loop*);

/* export: 'as-call_indirect-mid' */
u32 w2c_loop_as0x2Dcall_indirect0x2Dmid(w2c_loop*);

/* export: 'as-call_indirect-last' */
u32 w2c_loop_as0x2Dcall_indirect0x2Dlast(w2c_loop*);

/* export: 'as-store-first' */
void w2c_loop_as0x2Dstore0x2Dfirst(w2c_loop*);

/* export: 'as-store-last' */
void w2c_loop_as0x2Dstore0x2Dlast(w2c_loop*);

/* export: 'as-memory.grow-value' */
u32 w2c_loop_as0x2Dmemory0x2Egrow0x2Dvalue(w2c_loop*);

/* export: 'as-call-value' */
u32 w2c_loop_as0x2Dcall0x2Dvalue(w2c_loop*);

/* export: 'as-return-value' */
u32 w2c_loop_as0x2Dreturn0x2Dvalue(w2c_loop*);

/* export: 'as-drop-operand' */
void w2c_loop_as0x2Ddrop0x2Doperand(w2c_loop*);

/* export: 'as-br-value' */
u32 w2c_loop_as0x2Dbr0x2Dvalue(w2c_loop*);

/* export: 'as-local.set-value' */
u32 w2c_loop_as0x2Dlocal0x2Eset0x2Dvalue(w2c_loop*);

/* export: 'as-local.tee-value' */
u32 w2c_loop_as0x2Dlocal0x2Etee0x2Dvalue(w2c_loop*);

/* export: 'as-global.set-value' */
u32 w2c_loop_as0x2Dglobal0x2Eset0x2Dvalue(w2c_loop*);

/* export: 'as-load-operand' */
u32 w2c_loop_as0x2Dload0x2Doperand(w2c_loop*);

/* export: 'as-unary-operand' */
u32 w2c_loop_as0x2Dunary0x2Doperand(w2c_loop*);

/* export: 'as-binary-operand' */
u32 w2c_loop_as0x2Dbinary0x2Doperand(w2c_loop*);

/* export: 'as-test-operand' */
u32 w2c_loop_as0x2Dtest0x2Doperand(w2c_loop*);

/* export: 'as-compare-operand' */
u32 w2c_loop_as0x2Dcompare0x2Doperand(w2c_loop*);

/* export: 'as-binary-operands' */
u32 w2c_loop_as0x2Dbinary0x2Doperands(w2c_loop*);

/* export: 'as-compare-operands' */
u32 w2c_loop_as0x2Dcompare0x2Doperands(w2c_loop*);

/* export: 'as-mixed-operands' */
u32 w2c_loop_as0x2Dmixed0x2Doperands(w2c_loop*);

/* export: 'break-bare' */
u32 w2c_loop_break0x2Dbare(w2c_loop*);

/* export: 'break-value' */
u32 w2c_loop_break0x2Dvalue(w2c_loop*);

/* export: 'break-multi-value' */
struct wasm_multi_iij w2c_loop_break0x2Dmulti0x2Dvalue(w2c_loop*);

/* export: 'break-repeated' */
u32 w2c_loop_break0x2Drepeated(w2c_loop*);

/* export: 'break-inner' */
u32 w2c_loop_break0x2Dinner(w2c_loop*);

/* export: 'cont-inner' */
u32 w2c_loop_cont0x2Dinner(w2c_loop*);

/* export: 'param' */
u32 w2c_loop_param(w2c_loop*);

/* export: 'params' */
u32 w2c_loop_params(w2c_loop*);

/* export: 'params-id' */
u32 w2c_loop_params0x2Did(w2c_loop*);

/* export: 'param-break' */
u32 w2c_loop_param0x2Dbreak(w2c_loop*);

/* export: 'params-break' */
u32 w2c_loop_params0x2Dbreak(w2c_loop*);

/* export: 'params-id-break' */
u32 w2c_loop_params0x2Did0x2Dbreak(w2c_loop*);

/* export: 'effects' */
u32 w2c_loop_effects(w2c_loop*);

/* export: 'while' */
u64 w2c_loop_while(w2c_loop*, u64);

/* export: 'for' */
u64 w2c_loop_for(w2c_loop*, u64);

/* export: 'nesting' */
f32 w2c_loop_nesting(w2c_loop*, f32, f32);

/* export: 'type-use' */
void w2c_loop_type0x2Duse(w2c_loop*);

#ifdef __cplusplus
}
#endif

#endif  /* LOOP_H_GENERATED_ */
